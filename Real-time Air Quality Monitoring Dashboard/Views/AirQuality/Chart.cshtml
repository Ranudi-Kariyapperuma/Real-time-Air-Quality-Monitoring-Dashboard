@{
    ViewData["Title"] = "Historical Trends";
}

<section class="hero">
    <div class="text-center mt-4">
        <h2 class="text-white text-2xl font-bold mb-2">Colombo Historical AQI Trends</h2>
        <p class="text-gray-300">Select a sensor and time period to view AQI history.</p>
    </div>

    <!-- Sensor and Time Filters -->
    <div class="flex justify-center gap-4 mt-4">
        <select id="sensorSelector" class="p-2 rounded">
            <option value="colombo">Colombo</option>
        </select>

        <select id="timeSelector" class="p-2 rounded">
            <option value="day">Last Day</option>
            <option value="week" selected>Last Week</option>
            <option value="month">Last Month</option>
        </select>
    </div>

    <!-- Chart Canvas -->
    <div class="max-w-4xl mx-auto mt-6 p-4 bg-gray-800 rounded-lg">
        <canvas id="aqiHistoryChart"></canvas>
    </div>
</section>

<br>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const ctx = document.getElementById('aqiHistoryChart').getContext('2d');
            let aqiChart;

            function loadChart(sensorId, period) {
                fetch(`/AirQuality/GetAQIData?sensorId=${sensorId}&period=${period}`)
                    .then(response => response.json())
                    .then(data => {
                        if (aqiChart) aqiChart.destroy();

                        aqiChart = new Chart(ctx, {
                            type: 'line',
                            data: {
                                labels: data.labels,
                                datasets: [{
                                    label: 'AQI',
                                    data: data.values,
                                    borderColor: '#00c0ff',
                                    backgroundColor: 'rgba(0,192,255,0.2)',
                                    fill: true,
                                    tension: 0.3
                                }]
                            },
                            options: {
                                responsive: true,
                                scales: {
                                    y: {
                                        beginAtZero: true,
                                        ticks: { color: '#fff' },
                                        grid: { color: '#444' }
                                    },
                                    x: {
                                        ticks: { color: '#fff' }
                                    }
                                },
                                plugins: {
                                    legend: {
                                        labels: { color: '#fff' }
                                    }
                                }
                            }
                        });
                    });
            }

            const sensorSelector = document.getElementById('sensorSelector');
            const timeSelector = document.getElementById('timeSelector');

            sensorSelector.addEventListener('change', () => {
                loadChart(sensorSelector.value, timeSelector.value);
            });

            timeSelector.addEventListener('change', () => {
                loadChart(sensorSelector.value, timeSelector.value);
            });

            // Initial load with matching value
            loadChart(sensorSelector.value, timeSelector.value);
        });
    </script>
}

